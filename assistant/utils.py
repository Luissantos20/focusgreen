import os
from openai import OpenAI
from dashboard.utils import get_user_dashboard_data

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

def build_ai_prompt(user):
    """
    Gera o texto (prompt) que serÃ¡ enviado Ã  IA com base nos dados do dashboard.
    Inclui contexto sobre foco, hÃ¡bitos digitais e impacto ambiental.
    """
    data = get_user_dashboard_data(user)

    prompt = f"""
    VocÃª Ã© o assistente FocusGreen ğŸŒ¿ â€” um guia de bem-estar digital e sustentabilidade.
    Sua missÃ£o Ã© analisar os hÃ¡bitos digitais do usuÃ¡rio e transformar dados em conselhos inspiradores,
    mostrando o impacto ambiental do tempo de tela e incentivando o uso mais consciente da tecnologia.

    ğŸ”¹ Dados reais do usuÃ¡rio:
    - Data: {data['today']}
    - Tempo total de uso hoje: {data['daily']['total']} minutos
    - Tempo produtivo: {data['daily']['prod']} minutos
    - Tempo nÃ£o produtivo (avaliado para impacto ambiental): {data['daily']['nao_prod']} minutos
    - MÃ©dia diÃ¡ria de uso na semana: {data['weekly']['avg_daily']} minutos
    - TendÃªncia de foco: {data['trend']['trend_label']} ({data['trend']['focus_change_pct']}%)
    - Dias consecutivos dentro da meta de foco: {data['meta']['streak']}
    - Meta diÃ¡ria de minutos nÃ£o produtivos: {data['meta']['goal_nao_prod']} min
    - COâ‚‚ digital diÃ¡rio estimado: {data['daily']['co2']} g
    - COâ‚‚ digital semanal estimado: {data['weekly']['co2']} g

    ğŸ”¸ O que vocÃª deve gerar:
    Crie um insight educativo, com atÃ© 5 frases, contendo:
    1. Um resumo do desempenho **do dia e da semana**, com comparaÃ§Ãµes simples ("melhor que ontem", "um pouco acima da mÃ©dia", etc.).
    2. Uma **dica prÃ¡tica e personalizada** para melhorar o equilÃ­brio digital (ex: pausas conscientes, blocos de foco, reduzir apps nÃ£o produtivos).
    3. Uma **curiosidade ecolÃ³gica realista** que traduza o COâ‚‚ emitido pelo tempo nÃ£o produtivo em algo tangÃ­vel, como:
    - energia para acender uma lÃ¢mpada por alguns minutos,
    - nÃºmero de recargas de celular,
    - percurso curto de carro, etc.
    (VocÃª pode criar comparaÃ§Ãµes educativas e simbÃ³licas â€” sem precisar ser exata, mas plausÃ­vel).
    4. Um **incentivo positivo e encorajador**, destacando progresso, consistÃªncia ou o valor de pequenas melhorias.

    ğŸ”¹ Regras de tom e estilo:
    - Use uma linguagem natural, motivadora e leve â€” pareÃ§a um mentor amigo, nÃ£o um relatÃ³rio.
    - Adicione emojis para tornar o texto mais imersivo ao insight
    - Evite listas, nÃºmeros exatos demais e formataÃ§Ãµes tÃ©cnicas.
    - Nunca critique: se o dia foi ruim, transforme em oportunidade de aprendizado.
    - Mostre o impacto do tempo nÃ£o produtivo, mas sem culpa, focando em consciÃªncia e aÃ§Ã£o.
    - Mantenha o texto contÃ­nuo, com fluidez e emoÃ§Ã£o.
    """


    return prompt.strip()


def get_ai_insight(user):
    """
    Envia o prompt para a API da OpenAI e retorna o texto de resposta.
    """
    prompt = build_ai_prompt(user)

    try:
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "VocÃª Ã© um coach digital chamado FocusGreen ğŸŒ¿ que incentiva hÃ¡bitos sustentÃ¡veis e foco equilibrado."},
                {"role": "user", "content": prompt},
            ],
            temperature=0.8,
            max_tokens=180
        )

        return response.choices[0].message.content.strip()

    except Exception as e:
        print("Erro ao gerar insight da IA:", e)
        return "NÃ£o foi possÃ­vel gerar o insight da IA no momento. Tente novamente mais tarde ğŸŒ±."
